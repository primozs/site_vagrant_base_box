# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "pgc_precise64"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  # config.vm.box_url = "http://domain.com/path/to/above.box"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:3000" will access port 80 on the guest machine.
   config.vm.network :forwarded_port, guest: 80, host: 3000

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
   config.vm.network :private_network, ip: "192.168.56.55"
   config.ssh.max_tries = 150

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network :public_network

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:

   config.vm.provider :virtualbox do |vb|
     # Don't boot with headless mode
      vb.gui = true
  
     # Use VBoxManage to customize the VM. For example to change memory:
     vb.customize ["modifyvm", :id, "--memory", "512"]
   end
  
  # Enable provisioning with Puppet stand alone.  Puppet manifests
  # are contained in a directory path relative to this Vagrantfile.
  # You will need to create the manifests directory and a manifest in
  # the file pgc_precise64.pp in the manifests_path directory.
  
   config.vm.provision :puppet do |puppet|
        # puppet master
        #puppet.puppet_server = "puppet.example.com"

        # puppet agent node name
        #puppet.puppet_node = "travelslo.niceclouds.com"

        # puppet options
        #puppet.options = "--verbose --debug"

        ## boilerplate Vagrant/Puppet config
        puppet.manifests_path = "puppet"
        puppet.manifest_file = "manifests/travelslo.pp"

        # definition of modules in vagrant property array did not work, so like this works:
        puppet.options = "--hiera_config hiera.yaml --modulepath modules:modules42:modules_plab"

        ## custom facts provided to Puppet
        puppet.facter = {
            ## tells default.pp that we're running in Vagrant
            "is_vagrant" => true,
        }
   end

end
